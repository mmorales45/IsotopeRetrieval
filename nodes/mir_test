#!/usr/bin/env python
##Needs python3 to work
#nvm, python3 needs tkinter, python 2.7 needs Tkinter
import sys

import rospy
from std_srvs.srv import Empty,EmptyResponse
import requests, json
from Tkinter import *

ip = '192.168.1.2' # Ip if not connected to robot itself
# host = 'http://mir.com/api/v2.0.0/'   #If connected to robot
host = 'http://' + ip + '/api/v2.0.0/'   # if not connected to robot

class mobile_base:
    """Node to test basic functions of UR robot"""
    def __init__(self): 
        self.headers = {}
        self.headers['Content-Type'] = 'application/json'
        self.headers['Authorization'] = 'Basic bWFyY286OWY4NmQwODE4ODRjN2Q2NTlhMmZlYWEwYzU1YWQwMTVhM2JmNGYxYjJiMGI4MjJjZDE1ZDZjMTViMGYwMGEwOA=='
        self.mission_service_end = rospy.Service("marco/GoToFirstGoal", Empty,self.GoToC)
        self.mission_service_start = rospy.Service("marco/GoToSecondGoal", Empty,self.GoToT)
        self.getID_srv = rospy.Service("marco/Mission_Name", Empty,self.Mission_Name)

        print(self.headers)

        self.get_missions = requests.get(host + 'missions',headers = self.headers)
        self.list_missions = json.loads(self.get_missions.text)
        # print("Available Missions: " + str(len(list_missions)))
        # for i in self.list_missions:
        #     print(i)
        
        # mission_id = {"mission_id": "aae45adf-d82a-11ec-84ed-00012978eb25"}
        # post_mission = requests.post(host + 'mission_queue', json = mission_id, headers = headers)

    def GoToC(self,req):
        mission_id = {"mission_id": "6aa90256-7f77-11ed-9c71-00012978eb25"}
        post_mission = requests.post(host + 'mission_queue', json = mission_id, headers = self.headers)

        return EmptyResponse()
    
    def GoToT(self,req):
        mission_id = {"mission_id": "786a582a-7f77-11ed-9c71-00012978eb25"}
        post_mission = requests.post(host + 'mission_queue', json = mission_id, headers = self.headers)

        return EmptyResponse()

    def Mission_Name(self,req):
        print("Available Missions: " + str(len(self.list_missions)))
        for i in self.list_missions:
            print(i)
        return EmptyResponse()

def main(): #The main function.
    rospy.init_node("mir_NAVIGATOR")
    try:
        mission_move = mobile_base()
        rospy.spin()

    except rospy.ROSInterruptException:
        return
    except KeyboardInterrupt:
        return


if __name__ == "__main__":
    main()

